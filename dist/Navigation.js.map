{"version":3,"sources":["../src/js/Navigation/Navigation.js"],"names":["Navigation","menuId","fontFamily","chevronDown","chevronUp","fontFamilies","hasNestedSubmenu","menu","element","localName","icon","children","getAttribute","setAttribute","evt","target","submenuList","nextSibling","getElementsByTagName","length","className","preventDefault","classList","toggle","contains","chevronSwitcher","relatedTarget","parentNode","offsetParent","parentUL","expandedElementCollection","querySelectorAll","openElementCollection","getElementsByClassName","remove","type","clickHandler","focusInHandler","hoverHandler","listElements","Array","prototype","slice","call","forEach","listeners","i","addEventListener","eventDispatcher","includes","icons","hoverCss","style","document","createElement","styleSheet","cssText","appendChild","createTextNode","getElementById","setEventListeners","setSubmenuIcon","module","exports"],"mappings":"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","file":"Navigation.js","sourcesContent":["class Navigation {\n  constructor(\n    {\n      menuId = 'main-menu',\n      fontFamily = 'Font Awesome 5 Free',\n      chevronDown = '\\\\f078',\n      chevronUp = '\\\\f077'\n    } = {}\n  ) {\n    this.chevronDown = chevronDown;\n    this.chevronUp = chevronUp;\n    this.fontFamilies = ['FontAwesome', 'Font Awesome 5 Free', 'Glyphicons Halflings'];\n    this.fontFamily = fontFamily;\n    this.hasNestedSubmenu = false;\n    this.menu = null;\n    this.menuId = menuId;\n  }\n  chevronSwitcher(element) {\n    if (element.localName !== \"button\") return;\n    \n    const icon = element.children[0];\n\n    element.getAttribute('aria-expanded') === 'true' ? icon.setAttribute('data-before', this.chevronUp) : icon.setAttribute('data-before', this.chevronDown);\n  }\n  clickHandler(evt) {\n    const target = evt.target;\n    const submenuList = target.nextSibling;\n    // find out if there is a nested submenu inside a top level item\n    submenuList.getElementsByTagName('ul').length ? this.hasNestedSubmenu = true : this.hasNestedSubmenu = false;\n    // if something weird happens, don't allow any further event handling.\n    if (!target.getAttribute('aria-haspopup')) return;\n\n    // if we're on a list item that is really just a toggle, \n    // that is it doesn't have a page that it goes to, prevent the page from reloading.\n    target.className === 'submenu-toggle' ? evt.preventDefault() : null;\n\n    submenuList.classList.toggle('submenu-list-open');\n    target.setAttribute('aria-expanded', 'true');\n\n    submenuList.classList.contains('submenu-list-open') ? null : target.setAttribute('aria-expanded', 'false');\n\n    if (target.children) {\n      this.chevronSwitcher(target);\n    }\n  }\n  focusInHandler(evt) {\n    const { target, relatedTarget } = evt;\n    const { parentNode, offsetParent } = target;\n    const parentUL = offsetParent.parentNode;\n \n    // if the parentUL isn't the menu and it contains the target return\n    if (parentUL !== this.menu && parentUL.contains(target)) {\n      return\n    } else {\n      // close the submenu when you leave\n      const expandedElementCollection = parentUL.querySelectorAll('[aria-expanded=\"true\"]');\n      const openElementCollection = parentUL.getElementsByClassName('submenu-list-open');\n\n      if (expandedElementCollection.length) {\n        expandedElementCollection[0].setAttribute('aria-expanded', 'false');\n        openElementCollection[0].classList.remove('submenu-list-open');\n        this.chevronSwitcher(expandedElementCollection[0]);\n      }\n    }\n  }\n  hoverHandler(evt) {\n    const { type, target } = evt;\n    if (type === 'mouseout' && target.getAttribute('aria-haspopup') === \"true\") {\n      target.setAttribute('aria-expanded', 'false');\n    } else if (type === 'mouseover' && target.getAttribute('aria-haspopup') === \"false\") {\n      target.setAttribute('aria-expanded', 'true');\n    }\n\n    // if you hover and the htmlcollection length is greater than 0\n    if (target.children.length > 0) {\n      this.chevronSwitcher(target);\n    }\n  }\n  eventDispatcher(evt) {\n    // dispatch event listeners to the correct functions.\n    switch (evt.type) {\n      case 'click':\n        this.clickHandler(evt);\n        break;\n      case 'focusin':\n        this.focusInHandler(evt);\n        break;\n      case 'mouseover':\n      case 'mouseout':\n        this.hoverHandler(evt);\n        break;\n      default:\n        return;\n        break;\n    }\n  }\n  setEventListeners() {\n    // if this script is running, remove the 'no-js' class from the elements.\n    const listElements = Array.prototype.slice.call(this.menu.getElementsByClassName('no-js'));\n    listElements.forEach(element => {\n      element.classList.remove('no-js');\n    });\n    // define a list of possible event listeners\n    const listeners = ['click', 'focusin', 'mouseout', 'mouseover'];\n    // attach them to the menu.\n    for (let i = 0; i < listeners.length; i++) {\n      this.menu.addEventListener(listeners[i], (evt) => {\n        // dispatch the events to the class methods.\n        this.eventDispatcher(evt);\n      });\n    }\n  }\n  setSubmenuIcon() {\n    // possible font-family for the icons\n    let fontFamily = this.fontFamily;\n\n    if (!this.fontFamilies.includes(fontFamily)) {\n      fontFamily = '';\n    }\n\n    // the list of all the submenu icons\n    const icons = this.menu.querySelectorAll('.submenu-icon');\n    // the css to inject into the page\n    const hoverCss = `\n      nav ul li span::before {\n        content: '${this.chevronDown}';\n        font-family: '${fontFamily}';\n        font-weight: bold;\n      }\n      nav ul li:hover > button span::before,\n      nav ul li:focus > button span::before { \n        content: '${this.chevronUp}';\n        font-family: '${fontFamily}'; \n        font-weight: bold;\n      }`;\n\n    // create a style tag\n    const style = document.createElement('style');\n    // add the styles to the tag (or a stylesheet if it exists)\n    if (style.styleSheet) {\n      style.styleSheet.cssText = hoverCss;\n    } else {\n      style.appendChild(document.createTextNode(hoverCss));\n    }\n    // add the tag to the <head>\n    document.getElementsByTagName('head')[0].appendChild(style);\n    // set the data-before attribute to the values passed in the constructor.\n    icons.forEach((icon) => {\n      icon.setAttribute('data-before', this.chevronDown);\n    })\n  }\n  init() {\n    this.menu = document.getElementById(this.menuId);\n    this.setEventListeners();\n    this.setSubmenuIcon();\n  }\n}\n\nmodule.exports = Navigation;"]}