{"version":3,"sources":["../src/js/Navigation/Navigation.js"],"names":["Navigation","menuId","fontFamily","chevronDown","chevronUp","fontFamilies","hasNestedSubmenu","menu","element","localName","icon","children","getAttribute","setAttribute","evt","target","parentElement","submenuList","nextSibling","getElementsByTagName","length","classList","contains","preventDefault","toggle","parentNode","offsetParent","expandedElementCollection","querySelectorAll","openElementCollection","getElementsByClassName","remove","chevronSwitcher","keyCode","openSubmenu","type","clickHandler","focusInHandler","keyDownHandler","hoverHandler","listElements","Array","prototype","slice","call","forEach","listeners","i","addEventListener","eventDispatcher","includes","icons","hoverCss","style","document","createElement","styleSheet","cssText","appendChild","createTextNode","getElementById","setEventListeners","setSubmenuIcon"],"mappings":"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","file":"Navigation.js","sourcesContent":["class Navigation {\n    constructor({\n        menuId = 'main-menu',\n        fontFamily = 'Font Awesome 5 Free',\n        chevronDown = '\\\\f078',\n        chevronUp = '\\\\f077'\n    } = {}) {\n        this.chevronDown = chevronDown;\n        this.chevronUp = chevronUp;\n        this.fontFamilies = ['FontAwesome', 'Font Awesome 5 Free', 'Glyphicons Halflings'];\n        this.fontFamily = fontFamily;\n        this.hasNestedSubmenu = false;\n        this.menu = null;\n        this.menuId = menuId;\n    }\n    chevronSwitcher(element) {\n        if (element.localName !== \"button\") return;\n        const icon = element.children[0];\n\n        if (element.getAttribute('aria-expanded') == 'true') {\n            icon.setAttribute('data-before', this.chevronDown);\n            element.setAttribute('aria-expanded', 'false');\n        } else {\n            icon.setAttribute('data-before', this.chevronUp);\n            element.setAttribute('aria-expanded', 'true');\n        }\n    }\n    clickHandler(evt) {\n        let target = evt.target;\n        if (target.localName == \"span\") {\n            target = target.parentElement;\n        }\n        const submenuList = target.nextSibling;\n        // find out if there is a nested submenu inside a top level item\n        submenuList.getElementsByTagName('ul').length ? this.hasNestedSubmenu = true : this.hasNestedSubmenu = false;\n        // if something weird happens, don't allow any further event handling.\n        if (!target.getAttribute('aria-haspopup')) return;\n\n        // if we're on a list item that is really just a toggle, \n        // that is it doesn't have a page that it goes to, prevent the page from reloading.\n        target.classList.contains('submenu-toggle') ? evt.preventDefault() : null;\n\n        submenuList.classList.toggle('submenu-list-open');\n        target.setAttribute('aria-expanded', 'true');\n\n        submenuList.classList.contains('submenu-list-open') ? null : target.setAttribute('aria-expanded', 'false');\n    }\n    focusInHandler(evt) {\n        const { target } = evt;\n        const { offsetParent: { parentNode } } = target;\n\n        // if the parentUL isn't the menu and it contains the target return\n        if (parentNode !== this.menu && parentNode.contains(target)) {\n            return\n        } else {\n            // close the submenu when you leave\n            const expandedElementCollection = parentNode.querySelectorAll('[aria-expanded=\"true\"]');\n            const openElementCollection = parentNode.getElementsByClassName('submenu-list-open');\n\n            if (expandedElementCollection.length) {\n                // expandedElementCollection[0].setAttribute('aria-expanded', 'false');\n                openElementCollection[0].classList.remove('submenu-list-open');\n                this.chevronSwitcher(expandedElementCollection[0]);\n            }\n        }\n    }\n    keyDownHandler(evt) {\n        const { keyCode, target } = evt;\n        const { offsetParent: { parentNode } } = target;\n        const expandedElementCollection = parentNode.querySelectorAll('[aria-expanded=\"true\"]')[0];\n        const openSubmenu = parentNode.getElementsByClassName('submenu-list-open')[0];\n\n        if (keyCode === 27 && openSubmenu) {\n            this.chevronSwitcher(expandedElementCollection);\n            openSubmenu.classList.remove('submenu-list-open');\n        }\n\n    }\n    hoverHandler(evt) {\n        const { type, target } = evt;\n        if (type === 'mouseout' && target.getAttribute('aria-haspopup') === \"true\") {\n            target.setAttribute('aria-expanded', 'false');\n        } else if (type === 'mouseover' && target.getAttribute('aria-haspopup') === \"false\") {\n            target.setAttribute('aria-expanded', 'true');\n        }\n    }\n    eventDispatcher(evt) {\n        // dispatch event listeners to the correct functions.\n        switch (evt.type) {\n            case 'click':\n                this.clickHandler(evt);\n                break;\n            case 'focusin':\n                this.focusInHandler(evt);\n                break;\n            case 'keydown':\n                this.keyDownHandler(evt);\n                break;\n            case 'mouseover':\n            case 'mouseout':\n                this.hoverHandler(evt);\n                break;\n            default:\n                return;\n                break;\n        }\n    }\n    setEventListeners() {\n        // if this script is running, remove the 'no-js' class from the elements.\n        const listElements = Array.prototype.slice.call(this.menu.getElementsByClassName('no-js'));\n        listElements.forEach(element => {\n            element.classList.remove('no-js');\n        });\n        // define a list of possible event listeners\n        const listeners = ['click', 'focusin', 'keydown', 'mouseout', 'mouseover'];\n        // attach them to the menu.\n        for (let i = 0; i < listeners.length; i++) {\n            this.menu.addEventListener(listeners[i], (evt) => {\n                // dispatch the events to the class methods.\n                this.eventDispatcher(evt);\n            });\n        }\n    }\n    setSubmenuIcon() {\n        // possible font-family for the icons\n        let fontFamily = this.fontFamily;\n\n        if (!this.fontFamilies.includes(fontFamily)) {\n            fontFamily = '';\n        }\n\n        // the list of all the submenu icons\n        const icons = this.menu.querySelectorAll('.submenu-icon');\n        // the css to inject into the page\n        const hoverCss = `\n      nav ul li span::before {\n        content: '${this.chevronDown}';\n        font-family: '${fontFamily}';\n        font-weight: bold;\n      }\n      nav ul.click-menu li > button[aria-expanded=\"true\"] span::before,\n      nav ul.hover-menu li:hover > button span::before,\n      nav ul li:focus > button span::before { \n        content: '${this.chevronUp}';\n        font-family: '${fontFamily}'; \n        font-weight: bold;\n      }`;\n\n        // create a style tag\n        const style = document.createElement('style');\n        // add the styles to the tag (or a stylesheet if it exists)\n        if (style.styleSheet) {\n            style.styleSheet.cssText = hoverCss;\n        } else {\n            style.appendChild(document.createTextNode(hoverCss));\n        }\n        // add the tag to the <head>\n        document.getElementsByTagName('head')[0].appendChild(style);\n        // set the data-before attribute to the values passed in the constructor.\n        icons.forEach((icon) => {\n            icon.setAttribute('data-before', this.chevronDown);\n        })\n    }\n    init() {\n        this.menu = document.getElementById(this.menuId);\n        this.setEventListeners();\n        this.setSubmenuIcon();\n    }\n}"]}